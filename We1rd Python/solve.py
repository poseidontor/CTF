def binary_xor(i): 
	return i ^ 11
 
def binary_power(i):
	return 14**i

s = [-283469561876481, -31239502737409, -2004121538049, -152006272769, -19134875753610903553, -988968607474663425, -38098309116198913, -6633187747909633, -260681, -21169, -673, -49, -11279244929, -715305921, -58084993, -4033681, -943714745640252080957613332758529, -32129140205375738403763871809537, -4274885601555595445878946529281, -205708780826735419952069607425, -32187905032794511911181579534288814081, -2758963288525243878101278245796184065, -88162360723551026179928064245366785, -14570250091567256427495114259038209, -304791501906394634256385, -48664189380012588662785, -3506504873873087528961, -106719713552659185665, -25254426217567964503044259841, -1689094740525649573904908289, -111278779715628786075566081, -6024114390620505712361473, -1325423373217668225156378216385445711416917529460737, -112510058596116764454268130169364956869759044943873, -7742416924297233790842493278205428216647181664257, -231012439875053087791864627649890715324915908609, -92241783162191924886969973841781308785855622847397888001, -527095903783953856496971279095893193062032130556559361]


#o = []
#f = open('./flag.txt','r')
#r = f.readlines()[0]


#for i in range(len(r)):
#	o.append(ord(r[i]))

#s = []

#for i in range(len(o)):
#	t = binary_xor(i)
#	f = binary_power(t)
#	s.append(~(f * o[i]))

#print(len(s))
#print(s)



temp = []
output = ""
for i in range(len(s)):
	temp.append(~(s[i]))


for i in range(len(temp)):
	t = binary_xor(i)
	f = binary_power(t)
	output += chr(int(temp[i]/f))
	
print(output)
'''
Ref:
https://docs.python.org/3/library/dis.html
http://vega.lpl.arizona.edu/python/lib/bytecodes.html
'''
